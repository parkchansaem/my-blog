{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/TIL/4-19/4-19/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Chan saem 의 블로그"}},"markdownRemark":{"id":"fd554793-0b26-54e8-926a-d6568b5bb985","excerpt":"판다스(Pandas) 라이브러리\npandas…","html":"<p>판다스(Pandas) 라이브러리\npandas는 데이터분석을 위한 고수준의 자료구조와 데이터 분석 도구를 제공, 여기서 고수준이란 사용자가 쉽게 데이터를 제어하고 시각화 할 수있는 메서드 -판다스는 시리즈와 데이터 프레임 두개의 자료구조를 사용함 -리스트를 사용해서 시리즈 객체로 업그레이드 할수 있음</p>\n<p>판다스 시리즈의 데이터 타입 변환: 시리즈에 저장된 데이터가 문자열 타입으로 저장돼 있다고 가정해봅시다. 이러한 경우 덧셈 및 뺄셈 등의 연산을 적용할 수 없기 때문에 데이터 타입을 변경할 수 있어야 합니다.</p>\n<p>판다스 데이터 프레임: 다음 그림과 같이 행과 열로 구성된 2차원 데이터를 다루는데 효과적인 자료구조\n데이터프레임은 크게 세가지: 딕셔너리, 리스트, 리스트와 딕셔너리의 조합이 있다.</p>\n<p>-시리즈를 사용하다 보면 시리즈가 지원하는 기본 연산 이외에도 복잡한 형태의 사용자 정의 코드를 적용하고 싶은 경우가 있습니다. 예를 들어 숫자가 문자열 타입으로 시리즈에 바인딩 돼 있을때 이를 숫자로 변환하는 경우입니다. 형 변환 함수를 바로 사용하면 콤마로 인해 형변환을 실패해서 에러가 출력되게 되는데 이때 map을 사용하여 해결합니다.</p>\n<p>판다스 매서드 정리\nIndex-index로 정의\ncolumns-colunmn으로 정의\nvalues- data frame의 값 출력\nhead() - 맨위에서 자료 출력\ntail()- 맨아래에서 자료 출력\ninfo()-데이터프레임의 전체적인 요약정보를 출력\ndecribe() - 데이터 프레임의 전체적인 통계정보를 출력\nsort_values - column를 기준으로 내림차순 정렬\nFancy Index - 전체 데이터에서 원하는 데이터를 찾아오는 방법(iloc-배열의 순서에따라, loc-값을 따라)\nMask - 데이터프레임에 조건식을 적용해주면 조건에 만족하는지 여부를 알려줌\nJoin operation - SQL과 같이 join operation을 사용가능하며 merge() 를 이용\nConcat - 합치기</p>","frontmatter":{"title":"4/19","date":"April 19, 2022","description":"공부내역"}},"previous":{"fields":{"slug":"/TIL/4-18/4-18/"},"frontmatter":{"title":"4/18"}},"next":{"fields":{"slug":"/TIL/4-20/4-20/"},"frontmatter":{"title":"4/20"}}},"pageContext":{"id":"fd554793-0b26-54e8-926a-d6568b5bb985","previousPostId":"e9b64fc4-abc0-559f-95a6-db17d8395642","nextPostId":"a191f735-9361-5ff7-b206-9f61523e68dc"}},
    "staticQueryHashes": ["2841359383","3257411868"]}